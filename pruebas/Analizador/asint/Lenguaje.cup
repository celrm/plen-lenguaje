package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexico;
import alex.UnidadLexica;
import errors.GestionErrores;
import ast.E;
import ast.ASExp;

scan with {: return getScanner().next_token(); :};
action code {:
   private ASExp as = new ASExp();
:};
parser code {: 
   private GestionErrores errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErrores();
   AnalizadorLexico alex = (AnalizadorLexico)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal Id, Entero, Import, From, Const, Arr, Ent, 
		Bul, Car, Data, Function, Type, Return, Main, If, 
		Else, While, Punto, Length, Si, No, Caracter, 
		Asign, Distinto, Igual, Or, And, Menor, Meq, 
		Mayor, Maq, Not, Suma, Guion, Mul, Div, Mod,
		Indice, Acceso, PA, PC, CA, CC, LA, LC, Coma, 
		DosPts, Backslash
		;

non terminal  PROG, IMPORTBL, DECBL, DECVAR, DECVAR2, DECREG, 
		CPARAMS, REGDENTRO, DECFUN, PARAMS, DENTRO, DECTYPE,
		MAINBL, TYPENAME, EXPR, INSTR;

PROG ::= IMPORTBL DECBL MAINBL ;

IMPORTBL ::= | Import Id From Id Punto IMPORTBL;

DECBL ::= | DECVAR DECBL | DECREG DECBL | DECFUN DECBL | DECTYPE DECBL ;

DECVAR ::= Const DECVAR2 | DECVAR2 ;
DECVAR2 ::= TYPENAME Id Asign EXPR Punto ;

DECREG ::= Data Id PA CPARAMS PC Asign CA REGDENTRO CC Punto ;
CPARAMS ::= | Const TYPENAME Id Coma CPARAMS;
REGDENTRO ::= | DECVAR REGDENTRO ;
 
DECFUN ::= Function Id Return TYPENAME PA PARAMS PC CA DENTRO CC ;
PARAMS ::= | Const TYPENAME Id Coma PARAMS | TYPENAME Id Coma PARAMS ;
DENTRO ::= | INSTR DENTRO;

DECTYPE ::= Type Id Asign TYPENAME;

MAINBL ::= Main CA DENTRO CC ;

EXPR::= Entero ;
INSTR ::= DECVAR ;
TYPENAME ::= Ent | Bul | Car | Id | Arr Backslash TYPENAME ;
